addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='black',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$LONG,
lat = data_trust_spdf_pie$LAT,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("topright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
data_trust_spdf_pie[41, 7] = 50
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="ICB") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("STP21CD" = 1)
stp_spdfdata <- stp_spdf@data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "STP21CD")
#stp_spdf$data <- stp_spdfdata1
num_patients_stp <- gppopdata_blue[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
patients_stps <- stp_spdfdata$data.NUMBER_OF_PATIENTS
pal_metric2 <- colorNumeric(
palette = "Blues",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$NUMBER_OF_PATIENTS), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='black',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$LONG,
lat = data_trust_spdf_pie$LAT,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("topright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
data_trust_spdf_pie[41, 7] = 50.1
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="ICB") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("STP21CD" = 1)
stp_spdfdata <- stp_spdf@data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "STP21CD")
#stp_spdf$data <- stp_spdfdata1
num_patients_stp <- gppopdata_blue[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
patients_stps <- stp_spdfdata$data.NUMBER_OF_PATIENTS
pal_metric2 <- colorNumeric(
palette = "Blues",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$NUMBER_OF_PATIENTS), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='black',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$LONG,
lat = data_trust_spdf_pie$LAT,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("topright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
data_trust_spdf_pie[41, 7] = 50.2
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="ICB") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("STP21CD" = 1)
stp_spdfdata <- stp_spdf@data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "STP21CD")
#stp_spdf$data <- stp_spdfdata1
num_patients_stp <- gppopdata_blue[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
patients_stps <- stp_spdfdata$data.NUMBER_OF_PATIENTS
pal_metric2 <- colorNumeric(
palette = "Blues",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$NUMBER_OF_PATIENTS), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='black',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$LONG,
lat = data_trust_spdf_pie$LAT,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("topright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
data_trust_spdf_pie[41, 7] = 50.9
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="ICB") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("STP21CD" = 1)
stp_spdfdata <- stp_spdf@data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "STP21CD")
#stp_spdf$data <- stp_spdfdata1
num_patients_stp <- gppopdata_blue[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
patients_stps <- stp_spdfdata$data.NUMBER_OF_PATIENTS
pal_metric2 <- colorNumeric(
palette = "Blues",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$NUMBER_OF_PATIENTS), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='black',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$LONG,
lat = data_trust_spdf_pie$LAT,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("topright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
data_trust_spdf_pie[41, 7] = 51.0000
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="ICB") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("STP21CD" = 1)
stp_spdfdata <- stp_spdf@data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "STP21CD")
#stp_spdf$data <- stp_spdfdata1
num_patients_stp <- gppopdata_blue[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
patients_stps <- stp_spdfdata$data.NUMBER_OF_PATIENTS
pal_metric2 <- colorNumeric(
palette = "Blues",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$NUMBER_OF_PATIENTS), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='black',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$LONG,
lat = data_trust_spdf_pie$LAT,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("topright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
###############################################################
#load in the snapshot data to create summary tables and charts
###############################################################
data_snapshot = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/data/DSPT search results 09_09_2022 12_44_07.csv')
###############################################################
#load in the snapshot data to create summary tables and charts
###############################################################
data_snapshot = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/data/DSPT search results 09_09_2022 12_44_07.csv')
###############################################################
#load in the snapshot data to create summary tables and charts
###############################################################
data_snapshot = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT search results 09_09_2022 12_44_07.csv')
View(data_snapshot)
unique(data_snapshot$Primary.Sector)
data_summary = data_snapshot %>% select('Organisation Name', 'Status', 'Primary Sector')
data_summary = data_snapshot %>% select('Organisation.Name', 'Status', 'Primary.Sector')
data_summary = data_summary %>% filter('Primary.Sector' == c("CCG / Integrated Care Board (ICB)", "Commissioning Support Unit (CSU)", "NHS Trust"))
data_summary = data_summary %>% filter('Primary.Sector'%in% c("CCG / Integrated Care Board (ICB)", "Commissioning Support Unit (CSU)", "NHS Trust"))
View(data_summary)
data_summary = data_summary %>% filter(Primary.Sector %in% c("CCG / Integrated Care Board (ICB)", "Commissioning Support Unit (CSU)", "NHS Trust"))
data_snapshot = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT search results 09_09_2022 12_44_07.csv')
data_summary = data_snapshot %>% select('Organisation.Name', 'Status', 'Primary.Sector')
data_summary = data_summary %>% filter(Primary.Sector %in% c("CCG / Integrated Care Board (ICB)", "Commissioning Support Unit (CSU)", "NHS Trust"))
auxl <-data_summary %>% group_by(Primary.Sector,Short.Status) %>% summarise(n=n())
auxl <-data_summary %>% group_by(Primary.Sector,Status) %>% summarise(n=n())
View(auxl)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))), check = TRUE)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))), check = TRUE, check = FALSE)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))),~ address = TRUE, address=F)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))), address = TRUE,.~address=F)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))), address = T,.~address=F)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))), address = T~ F)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))),  T~ F)
data_metric <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))),  T~ NA)
View(data_metric)
data_s <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))),  T~ NA)
data_s <- data_summary %>% mutate_at(vars(contains(c('18/19', '20/21'))),  T)
data_s <- data_summary$Status %>% mutate_at(vars(contains(c('18/19', '20/21'))),  T)
unique(data_summary$Status)
data_summary %>% mutate(Short.Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'))
data_s = data_summary %>% mutate(Short.Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'))
View(data_s)
data_s = data_summary %>% mutate(Short.Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'), TRUE ~ Status)
data_s = data_summary %>% mutate(Short.Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'), TRUE ~ data_summary$Status)
data_s = data_summary %>% mutate(Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'))
data_s = data_summary %>% mutate(Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'), TRUE ~ Status)
data_s = data_summary %>% mutate(Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met'), TRUE ~ 'other')
data_s = data_summary %>% mutate(Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met', TRUE ~ Status))
data_s = data_summary %>% mutate(Short.Status = case_when(Status %in% c("20/21 Standards Met", "18/19 Standards Met", "19/20 Standards Met", "19/20 Approaching Standards", "19/20 Standards Exceeded", "20/21 Standards Exceeded", "20/21 Standards Not Met") ~ '21/22 Status Not Met',
Status %in% c("22/23 Standards Met") ~ '21/22 Standards Met', TRUE ~ Status))
auxl <-data_s %>% group_by(Primary.Sector,Short.Status) %>% summarise(n=n())
aux <- data_metric %>% group_by(Primary.Sector,Short.Status) %>% summarise(n=n()) %>% pivot_wider(names_from='Short.Status',values_from='n')
aux <- data_s %>% group_by(Primary.Sector,Short.Status) %>% summarise(n=n()) %>% pivot_wider(names_from='Short.Status',values_from='n')
org_type <-aux$Primary.Sector
fig_x <- auxl %>% plot_ly(x=~Sector,y= ~n,color=~Short.Status,type='bar')
fig_x
fig_x <- auxl %>% plot_ly(x=~Primary.Sector,y= ~n,color=~Short.Status,type='bar')
fig_x
tb_summary(data_s, group_by(c('Primary.Sector', 'Short.Status')))
tbl_summary(data_s, group_by(c('Primary.Sector', 'Short.Status')))
tbl_summary(data_s, by = (c('Primary.Sector', 'Short.Status')))
tbl_summary(data_s, by = (c('Primary.Sector')))
tbl_summary(data_s$Primary.Sector, by = (c('Short.Status')))
tbl_summary(data_summary, by = (c('Short.Status')))
tbl_summary(select(data_s, 'Primary.Sector', 'Short.Status'), by = (c('Short.Status')))
tbl_summary(select(data_s, 'Primary.Sector', 'Short.Status'), by = (c('Short.Status'))) %>% add_overall()
tbl_summary(data_s, by = (c('Short.Status'))) %>% add_overall()
tbl_summary(select(data_s,'Status', 'Primary.Sector', 'Short.Status'), by = (c('Short.Status')))
## Load 'curated' DSPT file
data <- read.csv("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT_CCG_21_22_snapshot09_09_22.csv")
tbl_summary(select(data_s,'Status', 'Primary.Sector', 'Short.Status'), by = (c('Short.Status')))
data_new = select(data_s, 'Short.Status', 'Primary.Sector')
data_new$Total = data_new$Short.Status
tbl_summary(data_new, by = (c('Short.Status')))
tbl_summary(data_new, by = 'Short.Status'))
tbl_summary(data_new, by = 'Short.Status')
tbl_summary(select(data_new,'Total'))
tbl_summary(select(data_new,'Total'), by = 'Total')
tbl_summary(select(data_new,'Total'), by = Total)
tbl_summary(select(data_new,'Total', 'Short.Status'), by = 'Short.Status')
tbl_summary(select(data_new,'Total', by = 'Total')
)
tbl_summary(select(data_new,'Total', by = 'Total'))
tbl_summary(select(data_s,'Status', 'Primary.Sector', 'Short.Status'), by = (c('Short.Status')))
tbl_summary(select(data_s, 'Primary.Sector', 'Short.Status'), by = (c('Short.Status')))
tbl_summary(select(data_s, 'Primary.Sector', 'Short.Status'), by = (c('Short.Status'))) %>% add_n()
ct_final = ctable(data_s$Primary.Sector, data_s$Short.Status,
prop = "r", chisq = FALSE, headings = FALSE
)
ct_final
ct_final %>% print(method="browser")
ct_final %>% print(file=paste0("cross_table_summary_21_22",Sys.Date(),".html"))
ct_final %>% print(file=paste0("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/cross_table_summary_21_22",Sys.Date(),".html"))
library(rgdal)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(leaflet)
### Load libraries
library(tidyverse)
library(readxl)
library(openxlsx)
library(gtsummary)
library(gt)
library(here)
library(webshot)
library(aod) # for wald.test
library(summarytools) # for ctable
library(ggpubr) # to use ggboxplot
#install.packages(c("httr", "jsonlite"))
library(httr)
library(jsonlite)
library(lubridate)
library(xtable)
library(plotly)
library(htmlwidgets)
library(leaflet.minicharts)
library(leaflet)
#############################################
# DSPT curated file
#############################################
## Load 'curated' DSPT file
data <- read.csv("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT_CCG_21_22_snapshot09_09_22.csv")
setwd("~/Documents/GitHub/open-cyber")
library(rgdal)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(leaflet)
### Load libraries
library(tidyverse)
library(readxl)
library(openxlsx)
library(gtsummary)
library(gt)
library(here)
library(webshot)
library(aod) # for wald.test
library(summarytools) # for ctable
library(ggpubr) # to use ggboxplot
#install.packages(c("httr", "jsonlite"))
library(httr)
library(jsonlite)
library(lubridate)
library(xtable)
library(plotly)
library(htmlwidgets)
library(leaflet.minicharts)
library(leaflet)
#############################################
# DSPT curated file
#############################################
## Load 'curated' DSPT file
data <- read.csv("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT_CCG_21_22_snapshot09_09_22.csv")
data <- data[-107,]
dsptlevels=c("21/22 Standards Exceeded","21/22 Standards Met","21/22 Approaching Standards","21/22 Standards Not Met","21/22 Not Published")
# Make Status a categorical
data$Short.Status = factor(data$Status,dsptlevels)
#############################################
# STP shapefile
#############################################
## Load STP shapefile
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/Inputs/shapefile/STP_APR_2021_EN_BUC_V2.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
stp_data = stp_spdf@data
#############################################
# CCG shapefile
#############################################
## Load CCG shapefile
ccg_spdf <- readOGR("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/Inputs/shapefile/CCG_APR_2021_EN_BFC.shp")
proj4string(ccg_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
ccg_spdf@proj4string # check system
ccg_spdf <- ccg_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
# Write to shapefile
#writeOGR(ccg_spdf, layer = 'myshp_simplified', 'C:/temp', driver="ESRI Shapefile")
region_spdf = readOGR('/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/Inputs/shapefile/NHS_England_Regions_(April_2020)_Boundaries_EN_BUC.shp')
proj4string(region_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
region_spdf@proj4string # check system
region_spdf <- region_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
region_full <- region_spdf
region_s <- rgeos::gSimplify(region_full,tol=0.01, topologyPreserve=FALSE)
# Create a spatial polygon data frame (includes shp attributes)
regions_spdf = SpatialPolygonsDataFrame(region_s, data.frame(region_full))
##Load correspondence from ODS to ONS codes
# https://geoportal.statistics.gov.uk/datasets/ons::clinical-commissioning-groups-april-2020-names-and-codes-in-england/explore
#lkp_ccg <- read.csv('./Inputs/Clinical_Commissioning_Groups_(April_2020)_Names_and_Codes_in_England.csv')
#############################################
# Create a points shapefile for Trusts
##########+
##########+###################################
trusts_data = read.csv("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT_trusts_21_22_snapshot09_09_22.csv")
trusts_data <- subset(trusts_data, !(ODS.Code %in% c('RBZ', 'RW6', 'RTV')))
trust_spdf_points <- sp::SpatialPointsDataFrame(
coords = trusts_data %>% select(longitude,latitude),
data = trusts_data %>% select(-c(longitude,latitude)),
proj4string = CRS("+init=epsg:4326") # indicate it is is longitude latitude
)
#############################################
#Further prep
#############################################
# Join DSPT data and ONS code
lookupdata = read.csv('/Users/muhammad-faaiz.shanawas/Documents/Github/open-cyber/data/Clinical_Commissioning_Group_to_STPs_(April_2021)_Lookup_in_England.csv')
data_merged = left_join(data, lookupdata, by = c("ODS.Code" = "CCG21CDH"))
data_merged = data_merged[-107,]
#load in ccg-stp-region lookup data
regions_lookup = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/Clinical_Commissioning_Group_to_STP_and_NHS_England_(Region)_(April_2021)_Lookup_in_England.csv')
data_regions = unique(select(regions_lookup, 'STP21CD', 'STP21NM', 'NHSER21NM'))
# Join the reduced DSPT info with the CCG shapefile
ccg_spdf@data <- left_join(ccg_spdf@data,data_merged,by=c("CCG21CD"="CCG21CD"))
data_ccg_spdf <- ccg_spdf@data
#merge and assign to stp_spdf data
stp_spdfdata = stp_spdf@data
stp_spdfdata = merge(stp_spdfdata, select(data_regions, 'STP21CD', 'NHSER21NM'), by = "STP21CD", all = TRUE)
#stp_spdfdata = na.omit(stp_spdfdata)
stp_spdf@data = stp_spdfdata
# Make Status a categorical
#ccg_spdf@data$Short.Status = factor(ccg_spdf@data$Short.Status,dsptlevels)
# Choose a palette
#my_palette <- rev(colorspace::rainbow_hcl(5))
my_palette <- colorspace::divergingx_hcl(5)
catpal <- colorFactor(my_palette, dsptlevels,reverse=F,ordered=T)
## Plotting
# Prepare the text for tooltips:
mytext <- paste(
"<b>SUB-ICB 2022 code (ODS): </b>", ccg_spdf@data$ICB22CD,"<br/>",
"<b>SUB-ICB 2022 name: </b>", ccg_spdf@data$LOC22NM,"<br/>",
"<b>2021 STP name: </b>", ccg_spdf@data$STP21NM,"<br/>",
"<b>Region name: </b>", ccg_spdf@data$NHSER22NM,"<br/>",
"<b>DSPT Status: </b>", ccg_spdf@data$Short.Status, "<br/>",
sep="") %>%
lapply(htmltools::HTML)
mytext_ics <- paste(
"<b>ICS/STP 2021 code: </b>", stp_spdf@data$STP21CD,"<br/>",
"<b>ICS/STP 2021 name: </b>", stp_spdf@data$STP21NM,"<br/>",
"<b>Region name: </b>", stp_spdf@data$NHSER21NM,"<br/>",
sep="") %>%
lapply(htmltools::HTML)
#############################################
# Summary metric
#############################################
#get the stp codes for trusts from etr
etr = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/etr.csv', header = FALSE)
etr = etr[,c('V1', 'V4')]
etr = select(etr, 'ODS.Code' = 'V1', 'STP21CDH' = 'V4')
trusts_data2 = trusts_data
trusts_data2$Sector = 'Trust'
trusts_data_merged = left_join(trusts_data2, etr)
trusts_data_merged = na.omit(trusts_data_merged)
trusts_data_merged = select(trusts_data_merged, c('ODS.Code', 'ODS.Org.Name', 'Status', 'Sector', 'STP21CDH'))
data_ccg = data_merged
stp_codes = select(data_ccg, 'STP21CD' = 'STP21CD', 'STP21CDH' = 'STP21CDH', 'STP21NM' = 'STP21NM')
stp_codes = unique(stp_codes)
trusts_data_merged = left_join(trusts_data_merged, stp_codes)
region_codes = unique(select(data_ccg, 'STP21CD' = 'STP21CD', 'NHSER22NM' = 'NHSER22NM'))
trusts_data_merged = left_join(trusts_data_merged, region_codes)
data_ccg$Sector = 'CCG'
data_ccg = select(data_ccg, 'ODS.Code' = 'ODS.Code', 'ODS.Org.Name' = 'LOC22NM', 'Status' = 'Status', 'Sector' = 'Sector', 'STP21CD' = 'STP21CD', 'STP21CDH' = 'STP21CDH', 'STP21NM' = 'STP21NM', 'NHSER22NM' = 'NHSER22NM')
data_joint <- rbind(data_ccg, trusts_data_merged)
data_metric <- data_joint %>% filter(Sector %in% c("Trust","CCG"))
View(data_joint)
data_snapshot = read.csv('/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/data/DSPT search results 09_09_2022 12_44_07.csv')
data_summary = data_snapshot %>% select('Organisation.Name', 'Status', 'Primary.Sector')
data_summary = data_summary %>% filter(Primary.Sector == "Commissioning Support Unit (CSU)")
View(data_summary)
data_csu = data_summary %>% filter(str_detect(Organisation.Name, 'CSU'))
View(data_csu)
data_joint$Primary.Sector = data_joint$Sector
data_s = left_join(select(data_joint, 'Organisation.Name', 'Primary.Sector', 'Status'), data_csu)
data_joint$Organisation.Name = data_joint$ODS.Org.Name
data_s = left_join(select(data_joint, 'Organisation.Name', 'Primary.Sector', 'Status'), data_csu)
View(data_s)
auxl <-data_s %>% group_by(Primary.Sector,Short.Status) %>% summarise(n=n())
auxl <-data_s %>% group_by(Primary.Sector,Status) %>% summarise(n=n())
aux <- data_s %>% group_by(Primary.Sector,Status) %>% summarise(n=n()) %>% pivot_wider(names_from='Status',values_from='n')
org_type <-aux$Primary.Sector
fig_x <- auxl %>% plot_ly(x=~Primary.Sector,y= ~n,color=~Short.Status,type='bar')
fig_x
fig_x <- auxl %>% plot_ly(x=~Primary.Sector,y= ~n,color=~Short.Status,type='bar')
fig_x
fig_x <- auxl %>% plot_ly(x=~Primary.Sector,y= ~n,color=~Status,type='bar')
fig_x
data_s = rbind(select(data_joint, 'Organisation.Name', 'Primary.Sector', 'Status'), data_csu)
select(data_joint, 'Organisation.Name', 'Primary.Sector', 'Status')
data_s = rbind(select(data_joint, 'Organisation.Name', 'Primary.Sector', 'Status'), data_csu)
data_s = rbind(select(data_joint, 'Organisation.Name', 'Status', 'Primary.Sector'), data_csu)
auxl <-data_s %>% group_by(Primary.Sector,Status) %>% summarise(n=n())
aux <- data_s %>% group_by(Primary.Sector,Status) %>% summarise(n=n()) %>% pivot_wider(names_from='Status',values_from='n')
org_type <-aux$Primary.Sector
fig_x <- auxl %>% plot_ly(x=~Primary.Sector,y= ~n,color=~Status,type='bar')
fig_x
ct_final = ctable(data_s$Primary.Sector, data_s$Status,
prop = "r", chisq = FALSE, headings = FALSE
)
ct_final %>% print(method="browser")
ct_final %>% print(file=paste0("/Users/muhammad-faaiz.shanawas/Documents/GitHub/open-cyber/cross_table_summary_21_22",Sys.Date(),".html"))
