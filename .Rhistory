m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
#width = 0.00001 * data_trust_spdf_pie$NUMBER_OF_PATIENTS ,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 5 ,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 100 ,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 50 ,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
###############################################################################################################################
# Mapping the proportion of Trusts dspt scores using minicharts (piecharts) with the population shown color coded in the ICSs
###############################################################################################################################
#filter the gppop data previously loaded in for STPs instead of CCGs
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="STP") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("stp20cd" = 1)
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_red, by = "stp20cd")
stp_spdfdata1 <- stp_spdfdata1 %>% rename("numpatients" = 10)
stp_spdf$data <- stp_spdfdata1
#get the min and max of patient population for STPs
num_patients_stp <- gppopdata_red[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
#make a new color pallete of different shades of grey with the domain being the min and max of the number of patients in STPS
pal_metric2 <- colorNumeric(
palette = "Greys",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
#filter the gppop data previously loaded in for STPs instead of CCGs
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="STP") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("stp20cd" = 1)
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_red, by = "stp20cd")
stp_spdfdata1 <- stp_spdfdata1 %>% rename("numpatients" = 10)
stp_spdf$data <- stp_spdfdata1
#get the min and max of patient population for STPs
num_patients_stp <- gppopdata_red[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
pal_metric2 <- colorNumeric(
palette = "Greys",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0) %>%
#addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0) %>%
#addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25, #adjusting the width of the picharts to look better on the map
transitionTime = 0)
minpatients
maxpatients
View(stp_spdfdata1)
#filter the gppop data previously loaded in for STPs instead of CCGs
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="STP") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("stp20cd" = 1)
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "stp20cd")
stp_spdfdata1 <- stp_spdfdata1 %>% rename("numpatients" = 10)
stp_spdf$data <- stp_spdfdata1
# load in GP practice population
# https://digital.nhs.uk/data-and-information/publications/statistical/patients-registered-at-a-gp-practice/march-2021
gppopdata <- read_csv("https://files.digital.nhs.uk/59/D3AD40/gp-reg-pat-prac-sing-age-regions.csv")
###############################################################################################################################
# Mapping the proportion of Trusts dspt scores using minicharts (piecharts) with the population shown color coded in the ICSs
###############################################################################################################################
#filter the gppop data previously loaded in for STPs instead of CCGs
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="STP") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("stp20cd" = 1)
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "stp20cd")
View(stp_spdfdata1)
## Load STP shapefile
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
#filter the gppop data previously loaded in for STPs instead of CCGs
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="STP") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_blue %>% rename("stp20cd" = 1)
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdat <- stp_spdf$data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "stp20cd")
stp_spdfdata1 <- stp_spdfdata1 %>% rename("numpatients" = 10)
stp_spdf$data <- stp_spdfdata1
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata <- stp_spdf$data
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "stp20cd")
stp_spdfdata1 <- stp_spdfdata1 %>% rename("numpatients" = 10)
stp_spdf$data <- stp_spdfdata1
View(stp_spdfdata)
## Load STP shapefile
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata <- stp_spdf$data
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
#merge together the stp spatial dataframe so the right population is plotted in the right STP region
stp_spdfdata <- stp_spdf$data
view(stp_spdfdata)
view(stp_spdfdata)
stp_spdfdata
stp_spdf$data
stp_spdf
## Load STP shapefile
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
stp_spdf$data
## Load STP shapefile
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
stp_spdf$data
## Load STP shapefile
# Source: https://geoportal.statistics.gov.uk/datasets/clinical-commissioning-groups-april-2020-full-clipped-boundaries-en/explore?location=52.950000%2C-2.000000%2C7.02
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
regions_spdf$data
ccg_spdf$data
stp_spdfdata <- stp_spdf$data
stp_spdf <- readOGR("./Inputs/shapefile/Sustainability_and_Transformation_Partnerships_(April_2020)_Boundaries_EN_BUC.shp")
proj4string(stp_spdf) <- CRS("+init=epsg:27700")  # BNG projection system
stp_spdf@proj4string # check system
stp_spdf <- stp_spdf %>% sp::spTransform(CRS("+init=epsg:4326")) # reproject to latlong system
stp_spdf$data
ccg_spdf_full
stp_spdf$stp20cd
data.frame(stp_spdf)
stp_spdfdata <- data.frame(stp_spdf)
View(stp_spdfdata)
gppopdata_blue <- gppopdata %>% filter(SEX=="ALL",AGE=="ALL",ORG_TYPE=="STP") %>% select(c("ONS_CODE","NUMBER_OF_PATIENTS"))
gppopdata_blue <- gppopdata_red %>% rename("stp20cd" = 1)
stp_spdfdata <- data.frame(stp_spdf)
stp_spdfdata1 = merge(stp_spdfdata, gppopdata_blue, by = "stp20cd")
stp_spdfdata1 <- stp_spdfdata1 %>% rename("numpatients" = 10)
num_patients_stp <- gppopdata_red[c("NUMBER_OF_PATIENTS")]
num_patients_stp <- gppopdata_blue[c("NUMBER_OF_PATIENTS")]
minpatients <- min(num_patients_stp)
maxpatients <- max(num_patients_stp)
patients_stps <- stp_spdfdata$data.NUMBER_OF_PATIENTS
pal_metric2 <- colorNumeric(
palette = "Greys",
domain = range(minpatients:maxpatients))
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Population Level")
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=0.8,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
m07 <- leaflet() %>%
addTiles %>%
addPolygons(
data=stp_spdf,
group="ICS Tiles",
fillOpacity=1,
fillColor=~pal_metric2(stp_spdfdata1$numpatients), #grey out the ICS tiles so there is less unnecessary detail
weight=0,
label=mytext_ics) %>%
addPolygons(
data=stp_spdf,
group="ICS boundary",
fillOpacity=0,
color='blue',
weight=5,
label=mytext_ics) %>%
addMinicharts(lng = data_trust_spdf_pie$long,
lat = data_trust_spdf_pie$lat,
type = "pie",
chartdata = data_trust_spdf_pie[, c("Standards_Exceeded", "Standards_Met", "Approaching_Standards", "Standards_Not_Met")],
colorPalette = c("#129F8C", '#9FD0BA', "#F5FFBF", "#FF4227"),
width = 25,
transitionTime = 0) %>%
addLegend("bottomright",pal=pal_metric2, minpatients:maxpatients, title="ICS Patient Population Level")
m07
###########################################
# save the widget in a html file if needed.
###########################################
saveWidget(m07, file=paste('./outputs/',"chloropleth_DSPT_PieCharts",".html"))
